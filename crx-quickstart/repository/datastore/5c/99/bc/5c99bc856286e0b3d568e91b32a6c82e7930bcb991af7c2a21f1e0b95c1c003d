{"version":3,"file":"app/app.bundle.js","mappings":"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","sources":["webpack://graphiql-clientlibs/./src/app/__localization__/index.js","webpack://graphiql-clientlibs/./src/app/app.clientlibs.js","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/Actions/CacheConfigurationDialog.js","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/Actions/CopyUrl.js","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/Actions/DeleteQueryDialog.js","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/PersistedQueriesList.js","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/PersistedQueriesPanel.js","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/PersistedQueryMenu.js","webpack://graphiql-clientlibs/./src/app/components/app.component.js","webpack://graphiql-clientlibs/./src/app/components/graphiql/graphiql.component.js","webpack://graphiql-clientlibs/./src/app/components/publish/publish.component.js","webpack://graphiql-clientlibs/./src/app/components/save/save.component.js","webpack://graphiql-clientlibs/./src/app/utils/AEMLocale2ReactIntl.js","webpack://graphiql-clientlibs/./src/app/utils/CachingGraphQLClient.js","webpack://graphiql-clientlibs/./src/app/utils/GraphQLUtil.js","webpack://graphiql-clientlibs/./src/app/utils/GraphiQLConfigUtil.js","webpack://graphiql-clientlibs/./src/app/utils/PersistedQueriesUtil.js","webpack://graphiql-clientlibs/./src/app/utils/QueryCacheHeaderMapper.js","webpack://graphiql-clientlibs/./src/app/utils/componentbase.js","webpack://graphiql-clientlibs/./src/app/utils/componentloader.js","webpack://graphiql-clientlibs/./src/app/utils/constants.js","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/styles/PersistedQueriesList.css","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/styles/PersistedQueriesPanel.css","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/styles/PersistedQueriesList.css?3bad","webpack://graphiql-clientlibs/./src/app/components/PersistedQueries/styles/PersistedQueriesPanel.css?0ad1"],"sourcesContent":["/* istanbul ignore file */\n/* eslint camelcase: 0 */\nexport { default as en_US } from './en_us.json';\nexport { default as fr_FR } from './fr_fr.json';\nexport { default as de_DE } from './de_de.json';\nexport { default as ja_JP } from './ja_jp.json';\nexport { default as it_IT } from './it_it.json';\nexport { default as es_ES } from './es_es.json';\nexport { default as pt_BR } from './pt_br.json';\nexport { default as zh_CN } from './zh_cn.json';\nexport { default as zh_TW } from './zh_tw.json';\nexport { default as ko_KR } from './ko_kr.json';\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ComponentBase } from \"project.utils/componentbase\";\nimport AppComponent from \"./components/app.component\";\nimport { create } from \"project.utils/componentloader\";\nimport localConverter from \"project.utils/AEMLocale2ReactIntl\";\nimport { IntlProvider } from 'react-intl';\nimport * as localeData from \"project.__localization__\";\n\nexport class GraphiQLApp extends ComponentBase {\n  init() {\n    const userLocale = localConverter(window.Granite.I18n.getLocale());\n    const reacIntlLocale = userLocale.replace('-', \"_\");\n    ReactDOM.render(\n      <IntlProvider messages={localeData[reacIntlLocale]} locale={userLocale} defaultLocale=\"en-US\">\n        <AppComponent {...this.config} />\n      </IntlProvider>, this.el);\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const $root = document.querySelector(\".graphiql-root\");\n  if ($root) {\n    create(GraphiQLApp, $root);\n  }\n});\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nimport React, {useState, useEffect} from 'react';\nimport {PropTypes} from 'prop-types';\nimport {\n  Button,\n  ButtonGroup,\n  Content,\n  Dialog,\n  Divider,\n  Heading,\n  TableView,\n  TableBody,\n  TableHeader,\n  Row,\n  Cell,\n  Column, NumberField, Checkbox, useDialogContainer, Text, ContextualHelp,\n} from \"@adobe/react-spectrum\";\nimport QueryCacheHeaderMapper from \"../../../utils/QueryCacheHeaderMapper\";\nimport {useIntl} from \"react-intl\";\n\nconst intlMessages = {\n  heading_cache_configuration: {\n    id: \"cache_configuration.heading_cache_configuration\",\n    defaultMessage: \"Cache Configuration\",\n    description: \"Heading text\",\n  },\n  label_cache_configuration_headers: {\n    id: \"cache_configuration.label_cache_configuration_headers\",\n    defaultMessage: \"Cache configuration headers\",\n    description: \"Label text\",\n  },\n  label_save: {\n    id: \"cache_configuration.label_save\",\n    defaultMessage: \"Save\",\n    description: \"Label text\",\n  },\n  label_cancel: {\n    id: \"cache_configuration.label_cancel\",\n    defaultMessage: \"Cancel\",\n    description: \"Label text\",\n  },\n  label_value_seconds: {\n    id: \"cache_configuration.label_value_seconds\",\n    defaultMessage: \"Value (seconds)\",\n    description: \"Label text\",\n  },\n  label_use: {\n    id: \"cache_configuration.label_use\",\n    defaultMessage: \"Use\",\n    description: \"Label text\",\n  },\n  label_header: {\n    id: \"cache_configuration.label_header\",\n    defaultMessage: \"Header\",\n    description: \"Label text\",\n  },\n  label_type: {\n    id: \"cache_configuration.label_type\",\n    defaultMessage: \"Type\",\n    description: \"Label text\",\n  },\n  max_age_info: {\n    id: \"cache_configuration.max_age_info\",\n    defaultMessage: \"Caches can store this content for specified number of seconds. Typically this is the browser TTL (Time To Live).\",\n    description: \"Info text\",\n  },\n  s_max_age_info: {\n    id: \"cache_configuration.s_max_age_info\",\n    defaultMessage: \"Same as max-age but applies specifically to proxy caches.\",\n    description: \"Info text\",\n  },\n  stale_revalidate_info: {\n    id: \"cache_configuration.stale_revalidate_info\",\n    defaultMessage: \"Caches may continue to serve a cached response after it becomes stale, for up to the specified number of seconds.\",\n    description: \"Info text\",\n  },\n  stale_if_error_info: {\n    id: \"cache_configuration.stale_if_error_info\",\n    defaultMessage: \"Caches may continue to serve a cached response in case of or origin error, for up to the specified number of seconds.\",\n    description: \"Info text\",\n  },\n};\n\nconst CacheConfigurationDialog = (props) => {\n  const formatMessage = useIntl().formatMessage;\n  const dialogContainer = useDialogContainer();\n  const defaultHeaderValues = [\n    {\n      headerGroup: \"cache-control\",\n      headers: [\n        { name:\"max-age\", value: 300, isSelected: false, info:formatMessage(intlMessages.max_age_info) },\n      ]\n    },\n    {\n      headerGroup: \"surrogate-control\",\n      headers: [\n        { name:\"s-maxage\", value: 600, isSelected: false, info: formatMessage(intlMessages.s_max_age_info) },\n        { name:\"stale-while-revalidate\", value: 1000, isSelected: false, info: formatMessage(intlMessages.stale_revalidate_info) },\n        { name:\"stale-if-error\", value: 1000, isSelected: false, info: formatMessage(intlMessages.stale_if_error_info) },\n      ]\n    }\n  ];\n\n  const [cacheHeaderState, setCacheHeaderState] = useState([...defaultHeaderValues]);\n  const [propsCacheHeaderState, setPropsCacheHeaderState] = useState([...JSON.parse(JSON.stringify(defaultHeaderValues))]);\n\n  useEffect(() => {\n    // update the internal state if props change\n    if (props.cacheHeaders && props.cacheHeaders.length > 0) {\n      const jsonHeaders = QueryCacheHeaderMapper.jsonToArray(props.cacheHeaders);\n      for (const e of jsonHeaders) {\n        console.log(`${e.headerGroup} = ${e.headers}`);\n        for (const header of e.headers) {\n          const headerInState = findHeader(e.headerGroup, header.name);\n          if (headerInState === null) {\n            continue;\n          }\n          headerInState.isSelected = true;\n          headerInState.value = header.value;\n        }\n      }\n    }\n    setCacheHeaderState([...cacheHeaderState]);\n    setPropsCacheHeaderState([...deepCloneData(cacheHeaderState)]);\n  }, [props.cacheHeaders]);\n\n  /**\n   * Important: This function only clones the data members, prototype functions as ignored!\n   * @param data\n   */\n  const deepCloneData = (data) => {\n    return JSON.parse(JSON.stringify(data));\n  };\n\n  const onSaveCacheConfig = () => {\n    // pass on the data\n    if (props.onData) {\n      props.onData(QueryCacheHeaderMapper.arrayToJson(cacheHeaderState));\n    }\n    dialogContainer.dismiss();\n  };\n\n  const onChangeCacheConfig = (headerGroup, headerName, isSelected) => {\n    updateHeaders(headerGroup, headerName, isSelected, null);\n  };\n\n  const onChangeCacheValue = (headerGroup, headerName, value) => {\n    updateHeaders(headerGroup, headerName, null, value);\n  };\n\n  const updateHeaders= (headerGroup, headerName, isSelected, value) => {\n    // find the headerGroup\n    const header = findHeader(headerGroup, headerName);\n    if (header === null) {\n      return;\n    }\n    // set current state for the header\n    if (isSelected !== null) {\n      header.isSelected = isSelected;\n    }\n\n    if (typeof value === 'number') {\n      if (value <= 0) {\n        value = 0;\n      }\n      header.value = value;\n    }\n\n    setCacheHeaderState([...deepCloneData(cacheHeaderState)]);\n  };\n\n  const findHeader = (headerGroup, headerName) => {\n    // find the headerGroup\n    const group = cacheHeaderState.find(grp => grp.headerGroup === headerGroup);\n    if (!group) {\n      return null;\n    }\n    // find the header\n    const header = group.headers.find(hdr => hdr.name === headerName);\n    if (!header) {\n      return null;\n    }\n    return header;\n  };\n\n  const onCancelCacheConfig = () => {\n    // reset state to defaults from props\n    setCacheHeaderState([...deepCloneData(propsCacheHeaderState)]);\n    dialogContainer.dismiss();\n  };\n\n  const label_save = formatMessage(intlMessages.label_save);\n  const label_cancel = formatMessage(intlMessages.label_cancel);\n\n  return (\n        <Dialog size=\"L\" role=\"cacheconfig-dialog\">\n          <Heading>{formatMessage(intlMessages.heading_cache_configuration)}</Heading>\n          <Divider />\n            <Content>\n              <TableView aria-label={formatMessage(intlMessages.label_cache_configuration_headers)}>\n                <TableHeader>\n                  <Column isRowHeader width=\"10%\">{formatMessage(intlMessages.label_use)}</Column>\n                  <Column isRowHeader width=\"25%\">{formatMessage(intlMessages.label_type)}</Column>\n                  <Column isRowHeader>{formatMessage(intlMessages.label_header)}</Column>\n                  <Column isRowHeader width=\"25%\">{formatMessage(intlMessages.label_value_seconds)}</Column>\n                </TableHeader>\n                <TableBody>\n                  {\n                    cacheHeaderState.map(\n                      group => group.headers.map(header =>\n                        <Row>\n                          <Cell><Checkbox aria-label={header.name}\n                            isSelected={header.isSelected}\n                            onChange={(isSelected) => onChangeCacheConfig(group.headerGroup, header.name, isSelected)}/></Cell>\n                          <Cell aria-label={group.headerGroup}>{group.headerGroup}</Cell>\n                          <Cell aria-label={header.name} width=\"auto\"><Text>{header.name}</Text>\n                            <ContextualHelp variant=\"info\">\n                              <Heading>{header.name}</Heading>\n                              <Content>\n                                <Text>\n                                  {header.info}\n                                </Text>\n                              </Content>\n                            </ContextualHelp>\n                          </Cell>\n                          <Cell><NumberField aria-label={header.name +\"-value\"}\n                            defaultValue={header.value} minValue={0} width=\"auto\" step={10}\n                            onChange={(value) => onChangeCacheValue(group.headerGroup, header.name, value)}/></Cell>\n                        </Row>\n                      )\n                    )\n                  }\n                </TableBody>\n              </TableView>\n            </Content>\n            <ButtonGroup>\n              <Button variant=\"secondary\" onPress={onCancelCacheConfig} aria-label={label_cancel}>{label_cancel}</Button>\n              <Button variant=\"cta\"\n                      onPress={onSaveCacheConfig}\n                      autoFocus aria-label={label_save}>{label_save}</Button>\n            </ButtonGroup>\n          </Dialog>\n\n  );\n};\n\nCacheConfigurationDialog.propTypes = {\n  cacheHeaders: PropTypes.string,\n  onData: PropTypes.func,\n};\n\nexport default CacheConfigurationDialog;\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nimport {\n  error as ErrorToast,\n  success as SuccessToast,\n} from \"@react/react-spectrum/Toast\";\nimport { EXECUTE_URL, DEFAULT_TOAST_TIMEOUT } from \"project.utils/constants\";\n\nconst intlMessages = {\n  copy_success: {\n    id: \"copy_url.success\",\n    defaultMessage: \"Query url copied to clipboard\",\n    description: \"Message displayed on success\",\n  },\n  copy_failed: {\n    id: \"copy_url.failed\",\n    defaultMessage: \"The Clipboard API is not available\",\n    description: \"Message displayed on failure\",\n  },\n};\n\n/**\n *\n * @param queryShortForm the query shortForm (i.e. `/config-name/query-name`)\n * @param queryBody the graphql query\n * @param formatMessage the function to localise the toast message\n * Tries to copy the graphql query GET url to the clipboard and show appropriate toast\n *  notification base on result.\n */\nexport const copyUrlToClipboard = async (queryShortForm, queryBody, formatMessage) => {\n  const variables = extractVariablesFromQuery(queryBody);\n  const url = createCopyUrl(queryShortForm, variables);\n  if (navigator && navigator.clipboard && navigator.clipboard.writeText) {\n    await navigator.clipboard.writeText(url);\n    displaySuccessToast(formatMessage(intlMessages.copy_success));\n  } else {\n    displayErrorToast(formatMessage(intlMessages.copy_failed));\n  }\n};\n\n/**\n *\n * @param queryBody the graphql query\n *\n * Extract and return a list of semi-colon separated variables to be appended\n *  to the query GET url.\n * Sample Input:\n * `query getArticleByAuthor($name: String!){\n *    articleList(filter: {author: {_expressions: [{value: $name}]}})\n *    {\n *       items {\n *         _path\n *         author\n *         main {\n *            plaintext\n *         }\n *       }\n *    }\n * }`\n * Sample Output: `;name=`\n */\nconst extractVariablesFromQuery = (queryBody) => {\n  let variables = \"\";\n  if (queryBody) {\n    queryBody = queryBody.substring(0, queryBody.indexOf(\"{\"));\n    if (queryBody) {\n      queryBody = queryBody.substring(\n        queryBody.indexOf(\"(\") + 1,\n        queryBody.indexOf(\")\")\n      );\n      if (queryBody) {\n        const params = queryBody.split(\",\");\n        params.forEach((param) => {\n          param = param.substring(param.indexOf(\"$\") + 1, param.indexOf(\":\"));\n          variables += \";\" + param + \"=\";\n        });\n      }\n    }\n  }\n  return variables;\n};\n\n/**\n *\n * @param queryShortForm the query shortForm (i.e. `/config-name/query-name`)\n * @param variables the semi-colon separated variables to be appended\n *  to the query GET url\n *\n * Create the copy/execute url for a query.\n */\nconst createCopyUrl = (queryShortForm, variables) => {\n  let origin = window.location.origin;\n  if (!origin) {\n    origin =\n      window.location.protocol +\n      \"//\" +\n      window.location.hostname +\n      (window.location.port ? \":\" + window.location.port : \"\");\n  }\n  return origin + window.Granite.HTTP.externalize(EXECUTE_URL) + queryShortForm + variables;\n};\n\n/**\n *\n * @param successMsg the message to display on success\n *\n * Display a success toast notification\n */\nconst displaySuccessToast = (successMsg) => {\n  SuccessToast(successMsg, {\n    timeout: DEFAULT_TOAST_TIMEOUT,\n    variant: \"success\",\n  });\n};\n\n/**\n *\n * @param errorMsg the message to display on failure\n *\n * Display an error toast notification\n */\nconst displayErrorToast = (errorMsg) => {\n  ErrorToast(errorMsg, {\n    timeout: DEFAULT_TOAST_TIMEOUT,\n    variant: \"error\",\n  });\n};\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  error as ErrorToast,\n  success as SuccessToast,\n} from \"@react/react-spectrum/Toast\";\nimport {\n  AlertDialog,\n  Heading,\n  Text,\n  useDialogContainer,\n  View,\n} from \"@adobe/react-spectrum\";\nimport { DEFAULT_TOAST_TIMEOUT } from \"project.utils/constants\";\nimport { deleteQuery } from \"project.utils/PersistedQueriesUtil\";\nimport {useIntl} from \"react-intl\";\n\nconst intlMessages = {\n  toast_deleted_query_success: {\n    id: \"cache_configuration.toast_deleted_query_success\",\n    defaultMessage: \"Deleted query: {queryName}\",\n    description: \"Toast message text\",\n  },\n  toast_deleted_query_error: {\n    id: \"cache_configuration.toast_deleted_query_error\",\n    defaultMessage: \"Failed to delete: {queryName}\",\n    description: \"Toast message text\",\n  },\n  title_delete_query: {\n    id: \"cache_configuration.title_delete_query\",\n    defaultMessage: \"Delete Query\",\n    description: \"Title text\",\n  },\n  label_delete: {\n    id: \"cache_configuration.label_delete\",\n    defaultMessage: \"Delete\",\n    description: \"Label on action button\",\n  },\n  label_cancel: {\n    id: \"cache_configuration.label_cancel\",\n    defaultMessage: \"Cancel\",\n    description: \"Label on action button\",\n  },\n  text_alert: {\n    id: \"cache_configuration.text_alert\",\n    defaultMessage: \"Are you sure you want to delete the persisted query:\",\n    description: \"Label on action button\",\n  },\n};\n\n/**\n *\n * Render a dialog to confirm the delete operation, on confirmation delete given query.\n */\nexport const DeleteQueryDialog = (props) => {\n  const formatMessage = useIntl().formatMessage;\n  const { queryName, queryShortForm, onDelete = () => void 0 } = props;\n  const dialogContainer = useDialogContainer();\n  const handleDelete = () => {\n    deleteQuery(queryShortForm,\n      () => {\n        displaySuccessToast(formatMessage(intlMessages.toast_deleted_query_success, { queryName: queryName }));\n        onDelete();\n      },\n      () => {\n        displayErrorToast(formatMessage(intlMessages.toast_deleted_query_error, { queryName: queryName }));\n      }\n    );\n    dialogContainer.dismiss();\n  };\n\n  const handleCancel = () => {\n    dialogContainer.dismiss();\n  };\n\n  return (\n    <AlertDialog\n      variant=\"destructive\"\n      title={formatMessage(intlMessages.title_delete_query)}\n      primaryActionLabel={formatMessage(intlMessages.label_delete)}\n      secondaryActionLabel={formatMessage(intlMessages.label_cancel)}\n      onPrimaryAction={handleDelete}\n      onSecondaryAction={handleCancel}\n    >\n      <View>\n        <Text>{formatMessage(intlMessages.text_alert)}</Text>\n        <Heading level={3}>{queryName}</Heading>\n      </View>\n    </AlertDialog>\n  );\n};\n\n/**\n *\n * @param successMsg the message to display on success\n *\n * Display a success toast notification\n */\nconst displaySuccessToast = (successMsg) => {\n  SuccessToast(successMsg, {\n    timeout: DEFAULT_TOAST_TIMEOUT,\n    variant: \"success\",\n  });\n};\n\n/**\n *\n * @param errorMsg the message to display on failure\n *\n * Display an error toast notification\n */\nconst displayErrorToast = (errorMsg) => {\n  ErrorToast(errorMsg, {\n    timeout: DEFAULT_TOAST_TIMEOUT,\n    variant: \"error\",\n  });\n};\n\nDeleteQueryDialog.propTypes = {\n  queryName: PropTypes.string,\n  queryShortForm: PropTypes.string,\n  onDelete: PropTypes.func,\n};\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\n\nimport React from \"react\";\nimport { useIntl } from 'react-intl';\nimport PropTypes from \"prop-types\";\nimport {\n  TableView,\n  TableHeader,\n  TableBody,\n  Column,\n  Row,\n  Cell,\n} from \"@adobe/react-spectrum\";\nimport \"./styles/PersistedQueriesList.css\";\nimport Globe from \"@spectrum-icons/workflow/Globe\";\nimport GlobeStrike from \"@spectrum-icons/workflow/GlobeStrike\";\nimport { PersistedQueryMenu } from \"./PersistedQueryMenu\";\n\n\nconst intlMessages = {\n  table_description: {\n    id: \"persisted_list.table_description\",\n    defaultMessage: \"Table showing persisted queries\",\n    description: \"Description for the table view\",\n  },\n  col_publish_status: {\n    id: \"persisted_list.publish_status\",\n    defaultMessage: \"Publish Status\",\n    description: \"Column name\",\n  },\n  col_query_name: {\n    id: \"persisted_list.query_name\",\n    defaultMessage: \"Query Name\",\n    description: \"Column name\",\n  },\n  col_menu: {\n    id: \"persisted_list.menu\",\n    defaultMessage: \"Menu\",\n    description: \"Column name\",\n  },\n  label_publish: {\n    id: \"persisted_list.publish\",\n    defaultMessage: \"Publish\",\n    description: \"Label icon\",\n  },\n  label_unpublish: {\n    id: \"persisted_list.unpublish\",\n    defaultMessage: \"Unpublish\",\n    description: \"Label on icon\",\n  },\n};\n\n/**\n *\n * To render individual persited query items\n */\nexport const PersistedQueriesList = (props) => {\n  const formatMessage = useIntl().formatMessage;\n  const {\n    queryList,\n    queryName,\n    endpointUrl,\n    onQuerySelection = () => void 0,\n    onDelete = () => void 0,\n    onSave = () => void 0,\n  } = props;\n  return (\n    <TableView\n      aria-label={formatMessage(intlMessages.table_description)}\n      selectionMode=\"single\"\n      selectionStyle=\"highlight\"\n      width=\"size-2400\"\n      height=\"100vh\"\n      overflowMode=\"truncate\"\n      // if initial selected query is not null, set it to selected\n      selectedKeys={queryName ? Array.of(queryName) : []}\n      // on selection change call the handleQuerySelection handler with the selected query\n      onSelectionChange={(key) => {\n        onQuerySelection(\n          // find that query object with the selected key\n          queryList.filter((queryObj) => {\n            return queryObj.queryName === key.currentKey;\n          })[0]\n        );\n      }}\n    >\n      <TableHeader>\n        <Column width=\"16%\" hideHeader=\"true\" align=\"center\">\n          {formatMessage(intlMessages.col_publish_status)}¨\n        </Column>\n        <Column width=\"68%\" hideHeader=\"true\">\n          {formatMessage(intlMessages.col_query_name)}¨\n        </Column>\n        <Column width=\"16%\" hideHeader=\"true\" align=\"end\">\n          {formatMessage(intlMessages.col_menu)}¨\n        </Column>\n      </TableHeader>\n      <TableBody items={queryList}>\n        {(query) => (\n          <Row key={query.queryName}>\n            <Cell>\n              {query.lastReplicationAction === \"Activate\" && (\n                <Globe aria-label={formatMessage(intlMessages.label_publish)} size=\"S\" />\n              )}\n              {query.lastReplicationAction === \"Deactivate\" && (\n                <GlobeStrike aria-label={formatMessage(intlMessages.label_unpublish)} size=\"S\" />\n              )}\n            </Cell>\n            <Cell>{query.queryName}</Cell>\n            <Cell>\n              <PersistedQueryMenu query={query} onDelete={onDelete} onSave={onSave} endpointUrl={endpointUrl}/>\n            </Cell>\n          </Row>\n        )}\n      </TableBody>\n    </TableView>\n  );\n};\n\nPersistedQueriesList.propTypes = {\n  endpointUrl: PropTypes.string,\n  queryList: PropTypes.array,\n  queryName: PropTypes.string,\n  onQuerySelection: PropTypes.func,\n  onDelete: PropTypes.func,\n  onSave: PropTypes.func,\n};\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\n\nimport React from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport {\n  Heading,\n  IllustratedMessage,\n  Content,\n  ProgressCircle,\n  ActionButton,\n  Flex,\n} from \"@adobe/react-spectrum\";\nimport Add from '@spectrum-icons/workflow/Add';\nimport NotFound from \"@spectrum-icons/illustrations/NotFound\";\nimport NoSearchResults from \"@spectrum-icons/illustrations/NoSearchResults\";\nimport PropTypes from \"prop-types\";\nimport { PersistedQueriesList } from \"./PersistedQueriesList\";\nimport PersistedQueryUtil from \"project.utils/PersistedQueriesUtil\";\nimport \"./styles/PersistedQueriesPanel.css\";\n\nconst intlMessages = {\n  loading: {\n    id: \"persisted_panel.loading\",\n    defaultMessage: \"Loading…\",\n    description: \"Description message displayed while loading\",\n  },\n  heading_persisted_query: {\n    id: \"persisted_panel.heading_persisted_query\",\n    defaultMessage: \"Persisted Queries\",\n    description: \"Heading text\",\n  },\n  label_create_query: {\n    id: \"persisted_panel.create_query\",\n    defaultMessage: \"Create Query\",\n    description: \"Label on action button\",\n  },\n  heading_no_saved: {\n    id: \"persisted_panel.heading_no_saved\",\n    defaultMessage: \"No saved queries\",\n    description: \"Heading text\",\n  },\n  content_no_saved: {\n    id: \"persisted_panel.content_no_saved\",\n    defaultMessage: \"Try saving a new query\",\n    description: \"Content text\",\n  },\n  heading_not_enabled: {\n    id: \"persisted_panel.heading_not_enabled\",\n    defaultMessage: \"Not enabled\",\n    description: \"Heading text\",\n  },\n  content_not_enabled: {\n    id: \"persisted_panel.content_not_enabled\",\n    defaultMessage: \"Try enabling Persisted Queries for this configuration\",\n    description: \"Content text\",\n  },\n};\n\n/**\n *\n * @class\n */\nclass PersistedQueriesPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      configName: null,\n      persistedQueries: null,\n      onCreate: this.props.onCreate\n    };\n    this.element = React.createRef();\n  }\n\n  async componentDidUpdate(prevProps) {\n    // Reload the persisted queries list if :\n    // 1. reloadFlag is set true (i.e. panel needs to be updated due to Delete/Save operation)\n    // 2. or the endpoint url has changed\n    if (this.props.reloadFlag !== prevProps.reloadFlag || prevProps.url !== this.props.url) {\n      const data = await new PersistedQueryUtil(this.props.url).fetchPersistedQueries();\n      this.setState(data);\n    }\n  }\n\n  async componentDidMount() {\n    // to populate the queries on first component load\n    const data = await new PersistedQueryUtil(this.props.url).fetchPersistedQueries();\n    this.setState(data);\n}\n\n\n  render() {\n    const { configName, persistedQueries } = this.state;\n    const formatMessage = this.props.intl.formatMessage;\n    // to be shown upon initial loading\n    //(while waiting for the list persisted queries API call response)\n    let content = (\n      <IllustratedMessage id=\"loading\">\n        <ProgressCircle\n          aria-label={formatMessage(intlMessages.loading)}\n          size=\"M\"\n          isIndeterminate={true}\n          marginTop=\"20px\"\n        />\n      </IllustratedMessage>\n    );\n    let enableAdd = false;\n    // when list of persisted queries are fetched\n    if (persistedQueries) {\n      // to be shown if there are persisted queries under the configuration\n      if (persistedQueries.length > 0) {\n        content = (\n          <div className=\"persisted-queries-list\">\n            <PersistedQueriesList\n              endpointUrl={this.props.url}\n              queryList={persistedQueries}\n              queryName={this.props.queryName}\n              onQuerySelection={this.props.onQuerySelection}\n              onDelete={this.props.onDelete}\n              onSave={this.props.onSave}\n            />\n          </div>\n        );\n      } else {\n        // to be shown if there are no persisted queries under the configuration\n        content = (\n          <IllustratedMessage id=\"no-saved-queries\">\n            <NoSearchResults />\n            <Heading>{formatMessage(intlMessages.heading_no_saved)}</Heading>\n            <Content>{formatMessage(intlMessages.content_no_saved)}</Content>\n          </IllustratedMessage>\n        );\n      }\n      enableAdd = true;\n    } else if (configName) {\n      // to be shown if persisted queries is not enabled for the configuration\n      content = (\n        <IllustratedMessage id=\"not-enabled\">\n          <NotFound />\n          <Heading>{formatMessage(intlMessages.heading_not_enabled)}</Heading>\n          <Content>{formatMessage(intlMessages.content_not_enabled)}</Content>\n        </IllustratedMessage>\n      );\n    }\n    return (\n      <div\n        className=\"persisted-queries-panel\"\n        id=\"persisted-queries-panel\"\n        data-config-name={configName}\n        ref={this.element}\n      >\n        <div className=\"persisted-queries-header\">\n          <div>\n            <Heading level=\"4\">{formatMessage(intlMessages.heading_persisted_query)}</Heading>\n          </div>\n          { enableAdd && (<ActionButton aria-label={formatMessage(intlMessages.label_create_query)} isQuiet onPress={this.state.onCreate} >\n              <Add />\n            </ActionButton>)}\n        </div>\n        <Flex direction=\"column\" width=\"100%\" gap=\"size-100\" alignItems=\"center\">\n          {content}\n        </Flex>\n      </div>\n    );\n  }\n}\n\nPersistedQueriesPanel.propTypes = {\n  url: PropTypes.string,\n  queryName: PropTypes.string,\n  reloadFlag: PropTypes.bool,\n  onQuerySelection: PropTypes.func,\n  onDelete: PropTypes.func,\n  onCreate: PropTypes.func,\n  onSave: PropTypes.func,\n};\n\nexport default injectIntl(PersistedQueriesPanel);\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nimport React from \"react\";\nimport { useIntl } from 'react-intl';\nimport PropTypes from \"prop-types\";\nimport {\n  ActionButton,\n  DialogContainer,\n  Item,\n  Menu,\n  MenuTrigger,\n} from \"@adobe/react-spectrum\";\nimport {success, error} from \"@react/react-spectrum/Toast\";\nimport More from \"@spectrum-icons/workflow/More\";\nimport { copyUrlToClipboard } from \"./Actions/CopyUrl\";\nimport { DeleteQueryDialog } from \"./Actions/DeleteQueryDialog\";\nimport { ACTION_COPY_URL, ACTION_DELETE, ACTION_CONFIGURE_CACHE_HEADERS } from \"project.utils/constants\";\nimport CacheConfigurationDialog from \"./Actions/CacheConfigurationDialog\";\nimport PersistedQueryUtil from \"../../utils/PersistedQueriesUtil\";\n\nconst intlMessages = {\n  label_copy_url: {\n    id: \"persisted_menu.copy_url\",\n    defaultMessage: \"Copy URL\",\n    description: \"Label for menu item\",\n  },\n  label_delete: {\n    id: \"persisted_menu.delete\",\n    defaultMessage: \"Delete\",\n    description: \"Label for menu item\",\n  },\n  label_headers: {\n    id: \"persisted_menu.headers\",\n    defaultMessage: \"Headers\",\n    description: \"Label for menu item\",\n  },\n  label_more_options: {\n    id: \"persisted_menu.label_more_options\",\n    defaultMessage: \"More Options\",\n    description: \"Label for icon\",\n  },\n};\n\n/**\n *\n * To render the menu action items for each persisted query\n */\nexport const PersistedQueryMenu = (props) => {\n  const formatMessage = useIntl().formatMessage;\n  const { query, onDelete = () => void 0, onSave = () => void 0 } = props;\n  const [dialog, setDialog] = React.useState();\n\n  // list of avaibale actions for each query element\n  const menuItems = [\n    { action: ACTION_COPY_URL, name: formatMessage(intlMessages.label_copy_url) },\n    { action: ACTION_DELETE, name: formatMessage(intlMessages.label_delete) },\n    { action: ACTION_CONFIGURE_CACHE_HEADERS, name: formatMessage(intlMessages.label_headers) },\n  ];\n\n  /**\n   *\n   * @param action the selected action\n   * @param qry the object representing a graphql query\n   *\n   * Invoke the appropriate action handler based on the action selected\n   */\n  const handleMenuAction = (action, qry) => {\n    if (action === ACTION_COPY_URL) {\n      // call copy-url action handler\n      copyUrlToClipboard(qry.shortForm, qry.query, formatMessage);\n    } else if (action === ACTION_DELETE) {\n      setDialog(action);\n    } else if (action === ACTION_CONFIGURE_CACHE_HEADERS) {\n      setDialog(action);\n    }\n  };\n\n  const handleCacheHeaderSave= (cacheHeaders) => {\n    // save headers and pass on info to backend\n    new PersistedQueryUtil(props.endpointUrl)\n      .createOrUpdatePersistedQuery(\n        false,\n        query.queryName,\n        query.query,\n        cacheHeaders,\n        formatMessage,\n        (successMsg, queryName, path) => {\n          //success handler\n          success(successMsg, {\n            timeout: 5000\n          });\n          onSave(queryName, path);\n        },\n        (errorMsg) => {\n          error(errorMsg, {\n            timeout: 5000\n          });\n        }\n      );\n  };\n\n  return (\n    <>\n      <MenuTrigger align=\"end\">\n        <ActionButton isQuiet aria-label={formatMessage(intlMessages.label_more_options)}>\n          <More />\n        </ActionButton>\n        <Menu\n          items={menuItems}\n          onAction={(key) => {\n            handleMenuAction(key, query);\n          }}\n        >\n          {(menuItem) => (\n            <Item key={menuItem.action} textValue={menuItem.name}>\n              {menuItem.name}\n            </Item>\n          )}\n        </Menu>\n      </MenuTrigger>\n      <DialogContainer onDismiss={() => setDialog(null)}>\n        {dialog === ACTION_DELETE && (\n          <DeleteQueryDialog\n            queryName={query.queryName}\n            queryShortForm={query.shortForm}\n            onDelete={onDelete}\n          />\n        )}\n        {dialog === ACTION_CONFIGURE_CACHE_HEADERS && (\n          <CacheConfigurationDialog\n            cacheHeaders={query.cacheHeaders}\n            onData={handleCacheHeaderSave}\n          />\n        )}\n      </DialogContainer>\n    </>\n  );\n};\n\nPersistedQueryMenu.propTypes = {\n  endpointUrl: PropTypes.string,\n  query: PropTypes.object,\n  onSave: PropTypes.func,\n  onDelete: PropTypes.func,\n};\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nimport React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport PropTypes from \"prop-types\";\nimport GraphiQLComponent from \"project.components/graphiql/graphiql.component\";\nimport PersistedQueriesPanel from \"./PersistedQueries/PersistedQueriesPanel\";\nimport Provider from \"@react/react-spectrum/Provider\";\nimport { Provider as ProviderV3 } from \"@react-spectrum/provider\";\nimport {\n  lightTheme,\n  Heading,\n  IllustratedMessage,\n  Content,\n  Flex\n} from \"@adobe/react-spectrum\";\nimport NotFound from \"@spectrum-icons/illustrations/NotFound\";\nimport { DEFAULT_QUERY } from \"project.utils/constants\";\nimport PersistedQueryUtil from \"project.utils/PersistedQueriesUtil\";\nimport { getQueryTypeFields } from \"project.utils/GraphQLUtil\";\n\nconst intlMessages = {\n  heading_no_models: {\n    id: \"app.heading_no_models\",\n    defaultMessage: \"No models defined for this endpoint\",\n    description: \"Used in illustration heading\",\n  },\n  content_no_models: {\n    id: \"app.content_no_models\",\n    defaultMessage: \"Try to add some content fragment models first.\",\n    description: \"Used in illustation content\",\n  },\n  heading_loading: {\n    id: \"app.heading_loading\",\n    defaultMessage: \"Loading available models...\",\n    description: \"Used in illustration heading\",\n  },\n  content_loading: {\n    id: \"app.content_loading\",\n    defaultMessage: \"Loading models from endpoints...\",\n    description: \"Used in illustation content\",\n  },\n  heading_no_endpoints: {\n    id: \"app.heading_no_endpoints\",\n    defaultMessage: \"No endpoints defined\",\n    description: \"Used in illustration heading\",\n  },\n  content_no_endpoints: {\n    id: \"app.content_no_endpoints\",\n    defaultMessage: \"Try to add an endpoint first <link>here</link>\",\n    description: \"Used in illustation content\",\n  },\n};\n\nexport class AppComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: DEFAULT_QUERY,\n      queryName: null,\n      cacheHeaders: \"\",\n      path: null,\n      url: window.Granite.HTTP.externalize(this.props.config.url),\n      // denotes whether the list of persisted queries needs to be reloaded (after delete/save)\n      reloadFlag: false,\n      hasModels: null,\n      lastReplicationAction: \"\",\n      isPersistedQueriesUIEnabled: this.props.config.isPersistedQueriesUIEnabled,\n    };\n    this.handleQuerySelection = this.handleQuerySelection.bind(this);\n    this.handleSave = this.handleSave.bind(this);\n    this.handleUrlChange = this.handleUrlChange.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleReload = this.handleReload.bind(this);\n  }\n\n  handleQuerySelection(queryObj) {\n    this.setState({ ...queryObj });\n  }\n\n  handleSave(queryName, path) {\n    this.setState(_ => ({\n      queryName: queryName,\n      path: path\n    }));\n    this.handleReload();\n  }\n\n  handleDelete() {\n    this.handleReload();\n    this.handleReset();\n  }\n\n  handleReset() {\n    this.setState(_ => ({\n      queryName: null,\n      query: DEFAULT_QUERY,\n      cacheHeaders: \"\",\n      path: null,\n      lastReplicationAction: \"\",\n    }));\n  }\n\n  handleReload() {\n    this.setState(prevState => ({\n      reloadFlag: !prevState.reloadFlag,\n    }));\n  }\n\n  /**\n   *\n   * @param event the endpoint url change event\n   *\n   * Update the component state with new url, so that it is re-rendered.\n   */\n  handleUrlChange(event) {\n    this.setState({\n      url: window.Granite.HTTP.externalize(event.detail)\n    })\n    const thisObj = this;\n    new PersistedQueryUtil(event.detail).isPersistedQueryEnabled().then( isEnabled => {\n      thisObj.setState({\n        configAllowPersistedQuery:  isEnabled\n      });\n    });\n    getQueryTypeFields(this.state.url).then(fields => {\n      thisObj.setState({\n        hasModels: fields.length > 0\n      });\n    });\n    this.handleReset();\n  }\n\n  async componentDidMount() {\n    // add listener to endpoint url change event\n    window.addEventListener(\"urlchange\", this.handleUrlChange);\n    if (this.state.isPersistedQueriesUIEnabled) {\n      await this.initConfigAllowPersistedQuery();\n    }\n    const fields = await getQueryTypeFields(this.state.url);\n    this.setState({\n      hasModels: fields.length > 0\n    })\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"urlchange\", this.handleUrlChange);\n  }\n\n  async initConfigAllowPersistedQuery() {\n    this.setState({\n      configAllowPersistedQuery: await new PersistedQueryUtil(this.state.url).isPersistedQueryEnabled()\n    });\n  }\n\n  render() {\n    const hasEndpoints = Object.keys(this.props.config.endpoints).length > 0;\n    const createURL = window.Granite.HTTP.externalize(\"/libs/cq/graphql/sites/admin/content/console.html\");\n    const formatMessage = this.props.intl.formatMessage;\n    return (\n        <Provider toastPlacement=\"bottom center\">\n          <ProviderV3 theme={lightTheme} colorScheme=\"light\">\n            <div className=\"graphiql__app\">\n              {this.state.isPersistedQueriesUIEnabled && hasEndpoints && (\n                <PersistedQueriesPanel\n                  url={this.state.url}\n                  queryName={this.state.queryName}\n                  reloadFlag={this.state.reloadFlag}\n                  onQuerySelection={this.handleQuerySelection}\n                  onDelete={this.handleDelete}\n                  onCreate={this.handleReset}\n                  onSave={this.handleSave}\n                />\n                  )\n              }\n              { hasEndpoints && this.state.hasModels === true && (\n                <GraphiQLComponent\n                    url={this.state.url}\n                    path={this.state.path}\n                    onSave={this.handleSave}\n                    onPublish={this.handleReload}\n                    queryName={this.state.queryName}\n                    cacheHeaders={this.state.cacheHeaders}\n                    query={this.state.query}\n                    lastReplicationAction={this.state.lastReplicationAction}\n                    configAllowPersistedQuery={this.state.isPersistedQueriesUIEnabled && this.state.configAllowPersistedQuery}\n                />\n                  )\n              }\n              { hasEndpoints && this.state.hasModels === false && (\n                <Flex direction=\"column\" width=\"100%\" gap=\"size-100\" alignItems=\"center\">\n                  <IllustratedMessage id=\"no-models\">\n                    <NotFound />\n                    <Heading>{formatMessage(intlMessages.heading_no_models)}</Heading>\n                    <Content>{formatMessage(intlMessages.content_no_models)}</Content>\n                  </IllustratedMessage>\n                </Flex>\n              )\n              }\n              { hasEndpoints && this.state.hasModels === null && (\n                <Flex direction=\"column\" width=\"100%\" gap=\"size-100\" alignItems=\"center\">\n                  <IllustratedMessage id=\"loading-models\">\n                    <Heading>{formatMessage(intlMessages.heading_loading)}</Heading>\n                    <Content>{formatMessage(intlMessages.content_loading)}</Content>\n                  </IllustratedMessage>\n                </Flex>\n              )\n              }\n              { !hasEndpoints && (\n                <Flex direction=\"column\" width=\"100%\" gap=\"size-100\" alignItems=\"center\">\n                  <IllustratedMessage id=\"no-endpoints\">\n                    <NotFound />\n                    <Heading>{formatMessage(intlMessages.heading_no_endpoints)}</Heading>\n                    <Content>{formatMessage(intlMessages.content_no_endpoints, { link: str => <a href={createURL}>{str}</a> })}</Content>\n                  </IllustratedMessage>\n                </Flex>\n                  )\n              }\n            </div>\n          </ProviderV3>\n        </Provider>\n    );\n  }\n}\n\nAppComponent.propTypes = {\n  config: PropTypes.object,\n  url: PropTypes.string,\n  path: PropTypes.string,\n  queryName: PropTypes.string,\n  cacheHeaders: PropTypes.string,\n  query: PropTypes.string,\n  isPersistedQueriesUIEnabled: PropTypes.bool,\n  onSave: PropTypes.func,\n  onPublish: PropTypes.func,\n};\n\nAppComponent.defaultProps = {\n  config: {\n    url: null,\n    endpoints: [],\n    isPersistedQueriesUIEnabled: false,\n  }\n}\nexport default injectIntl(AppComponent);\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nimport React, { Component } from \"react\";\nimport { injectIntl } from \"react-intl\";\nimport PropTypes from \"prop-types\";\nimport GraphiQL from \"graphiql\";\nimport SaveComponent from \"project.components/save/save.component\";\nimport History from \"@spectrum-icons/workflow/History\";\nimport Annotate from \"@spectrum-icons/workflow/Annotate\";\nimport PublishComponent from \"project.components/publish/publish.component\";\nimport CachingGraphQLClient from \"project.utils/CachingGraphQLClient\";\n\nimport { ActionButton, Text } from \"@adobe/react-spectrum\";\n\nconst intlMessages = {\n  history: {\n    id: \"graphiql.history\",\n    defaultMessage: \"History\",\n    description: \"Label on the History button\",\n  },\n  prettify: {\n    id: \"graphiql.prettify\",\n    defaultMessage: \"Prettify\",\n    description: \"Label on the Prettify button\",\n  }\n};\n\nclass GraphiQLComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: this.props.query,\n      cacheHeaders: this.props.cacheHeaders,\n    };\n    this.cachingGraphQLClient = new CachingGraphQLClient();\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  handleEditQuery = (queryString) => {\n    if (this.mounted) {\n      this.setState({\n        query: queryString,\n      });\n    }\n  };\n\n  componentDidUpdate(prevProps) {\n    if ((this.props.query !== prevProps.query)\n    || this.props.queryName !== prevProps.queryName\n    || this.props.cacheHeaders !== prevProps.cacheHeaders) {\n      this.setState({\n        query: this.props.query,\n        cacheHeaders: this.props.cacheHeaders,\n      });\n    }\n  }\n\n  render() {\n    GraphiQL.Logo = () => <span />;\n    const configAllowPersistedQuery = this.props.configAllowPersistedQuery;\n    const formatMessage = this.props.intl.formatMessage;\n    return (\n      <div className=\"gq-container\">\n        <GraphiQL\n          ref={(ref) => (this._graphiql = ref)}\n          key={ this.props.url }\n          onEditQuery={\n            configAllowPersistedQuery ? this.handleEditQuery : undefined\n          }\n          query={ this.props.query }\n          style={{ height: \"100vh\" }}\n          defaultVariableEditorOpen={true}\n          fetcher={async (graphQLParams) => {\n            return this.cachingGraphQLClient.query(this.props.url, graphQLParams);\n          }}\n        >\n          <GraphiQL.Toolbar>\n            <div style={{ background: \"linear-gradient(#f7f7f7,#e2e2e2)\" }}>\n              <ActionButton\n                isQuiet\n                onPress={() => this._graphiql.ref.props.prettify() }\n                staticColor=\"black\"\n                aria-label={ formatMessage(intlMessages.prettify) }\n              >\n                <Annotate />\n                <Text>{ formatMessage(intlMessages.prettify) }</Text>\n              </ActionButton>\n              <ActionButton\n                isQuiet\n                onPress={() => this._graphiql.ref.props.historyContext.toggle() }\n                staticColor=\"black\"\n                aria-label={ formatMessage(intlMessages.history) }\n              >\n                <History />\n                <Text>{ formatMessage(intlMessages.history) }</Text>\n              </ActionButton>\n              {configAllowPersistedQuery && this.state.query && (\n                <SaveComponent\n                  endpointURL={this.props.url}\n                  query={this.state.query}\n                  queryName={this.props.queryName}\n                  cacheHeaders={this.state.cacheHeaders}\n                  onSave={this.props.onSave}\n                />\n              )}\n              {configAllowPersistedQuery && this.props.path && (\n                <PublishComponent path={this.props.path} onPublish={this.props.onPublish} lastReplicationAction={this.props.lastReplicationAction} />\n              )}\n            </div>\n          </GraphiQL.Toolbar>\n        </GraphiQL>\n      </div>\n    );\n  }\n}\n\nGraphiQLComponent.propTypes = {\n  url: PropTypes.string,\n  path: PropTypes.string,\n  lastReplicationAction: PropTypes.string,\n  query: PropTypes.string,\n  cacheHeaders: PropTypes.string,\n  queryName: PropTypes.string,\n  onSave: PropTypes.func,\n  onPublish: PropTypes.func,\n  configAllowPersistedQuery: PropTypes.bool,\n};\n\nexport default injectIntl(GraphiQLComponent);\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\n\nimport React, {Component} from 'react';\nimport { injectIntl } from \"react-intl\";\nimport PropTypes from 'prop-types';\nimport {\n  ActionButton,\n  Button,\n  ButtonGroup,\n  Content,\n  Dialog,\n  DialogTrigger,\n  Text,\n  Heading,\n  Divider,\n} from '@adobe/react-spectrum';\nimport Globe from '@spectrum-icons/workflow/Globe';\nimport GlobeStrike from '@spectrum-icons/workflow/GlobeStrike';\nimport {success, error} from \"@react/react-spectrum/Toast\";\nimport { activate, deactivate } from 'project.utils/PersistedQueriesUtil';\n\nconst intlMessages = {\n  label_publish: {\n    id: \"publish.publish\",\n    defaultMessage: \"Publish\",\n    description: \"Used as label for an action button\",\n  },\n  label_unpublish: {\n    id: \"publish.unpublish\",\n    defaultMessage: \"Unpublish\",\n    description: \"Used as label for an action button\",\n  },\n  heading_unpublish: {\n    id: \"publish.heading_unpublish\",\n    defaultMessage: \"Unpublish persisted query\",\n    description: \"Used as heading text for dialog\",\n  },\n  text_unpublish: {\n    id: \"publish.text_unpublish\",\n    defaultMessage: \"Unpublishing might break client applications that rely on the persisted query being present on publish.\\nDo you really want to unpublish the selected persisted query ?\",\n    description: \"Used as text for dialog\",\n  },\n  label_unpublish_yes: {\n    id: \"publish.unpublish_yes\",\n    defaultMessage: \"Yes\",\n    description: \"Used as label for action button\",\n  },\n  label_unpublish_no: {\n    id: \"publish.unpublish_no\",\n    defaultMessage: \"No\",\n    description: \"Used as label for action button\",\n  },\n};\n\nexport class PublishComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lastReplicationAction: this.props.lastReplicationAction\n    }\n    this.publishQuery = this.publishQuery.bind(this);\n    this.unpublishQuery = this.unpublishQuery.bind(this);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.lastReplicationAction !== prevProps.lastReplicationAction) {\n      this.setState({\n        lastReplicationAction: this.props.lastReplicationAction\n      });\n    }\n  }\n\n  publishQuery() {\n    const thisObj = this;\n    const formatMessage = this.props.intl.formatMessage;\n    activate(this.props.path,\n        (successMsg) => {\n          this.setState({\n            lastReplicationAction: \"Activate\",\n          })\n          thisObj.props.onPublish();\n          success(formatMessage(successMsg), {\n            timeout: 5000\n          });\n        },\n        (errorMsg) => {\n          error(formatMessage(errorMsg), {\n            timeout: 5000\n          });\n        }\n      );\n  }\n\n  unpublishQuery() {\n    const thisObj = this;\n    const formatMessage = this.props.intl.formatMessage;\n    deactivate(this.props.path,\n      (successMsg) => {\n        this.setState({\n          lastReplicationAction: \"Deactivate\",\n        })\n        thisObj.props.onPublish();\n        success(formatMessage(successMsg), {\n          timeout: 5000\n        });\n      },\n      (errorMsg) => {\n        // \"Could not \"+errorMsg+\" selected query.\"\n        error(formatMessage(errorMsg), {\n          timeout: 5000\n        });\n      }\n    );\n    this.state.close();\n  }\n\n  render() {\n    const canUnpublish = this.state.lastReplicationAction === \"Activate\";\n    const formatMessage = this.props.intl.formatMessage;\n    const publish = formatMessage(intlMessages.label_publish);\n    const unpublish = formatMessage(intlMessages.label_unpublish);\n    const yes = formatMessage(intlMessages.label_unpublish_yes);\n    const no = formatMessage(intlMessages.label_unpublish_no);\n    return (<>\n        <ActionButton isQuiet onPress={this.publishQuery} staticColor=\"black\" aria-label={publish}>\n          <Globe/>\n          <Text>{publish}</Text>\n        </ActionButton>\n        { canUnpublish && (\n          <DialogTrigger>\n            <ActionButton isQuiet staticColor=\"black\" aria-label={unpublish}>\n              <GlobeStrike/>\n              <Text>{unpublish}</Text>\n            </ActionButton>\n            {(close) => (\n              this.state.close = close,\n                <Dialog role=\"unpublish-dialog\">\n                  <Heading>{formatMessage(intlMessages.heading_unpublish)}</Heading>\n                  <Divider/>\n                  <Content>\n                    <Text>{formatMessage(intlMessages.text_unpublish)}</Text>\n                  </Content>\n                  <ButtonGroup>\n                    <Button aria-label={no} variant=\"secondary\" onPress={close}>{no}</Button>\n                    <Button aria-label={yes} variant=\"cta\" onPress={this.unpublishQuery}>{yes}</Button>\n                  </ButtonGroup>\n                </Dialog>\n            )}\n          </DialogTrigger>\n        )}\n      </>\n    );\n  }\n}\n\nPublishComponent.propTypes = {\n  path: PropTypes.string,\n  onPublish: PropTypes.func,\n  lastReplicationAction: PropTypes.string,\n};\n\nexport default injectIntl(PublishComponent);\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\n\nimport React, {Component} from 'react';\nimport { injectIntl } from \"react-intl\";\nimport PropTypes from 'prop-types';\nimport {\n  ActionButton,\n  Button,\n  ButtonGroup,\n  Content,\n  Dialog,\n  DialogTrigger,\n  Text,\n  TextField,\n  Form,\n} from '@adobe/react-spectrum';\nimport SaveFloppy from '@spectrum-icons/workflow/SaveFloppy';\nimport {success, error} from \"@react/react-spectrum/Toast\";\nimport PersistedQueryUtil from \"project.utils/PersistedQueriesUtil\";\n\nconst intlMessages = {\n  label_save: {\n    id: \"save.save\",\n    defaultMessage: \"Save\",\n    description: \"Used as label for an action button\",\n  },\n  label_save_as: {\n    id: \"save.save_as\",\n    defaultMessage: \"Save As\",\n    description: \"Used as label for an action button\",\n  },\n  label_query_name: {\n    id: \"save.query_name\",\n    defaultMessage: \"Query Name\",\n    description: \"Used in illustation content\",\n  },\n  placeholder_query_name: {\n    id: \"save.placeholder_query_name\",\n    defaultMessage: \"Type your query name\",\n    description: \"Used as placeholder message\",\n  },\n};\n\nexport class SaveComponent extends Component {\n  constructor(props) {\n    super(props);\n    const queryName = this.props.queryName? this.props.queryName : \"\";\n    const cacheHeaders = this.props.cacheHeaders? this.props.cacheHeaders : \"\";\n    const isNewQuery = !this.props.queryName;\n    this.state = {\n      queryName,\n      isNewQuery,\n      cacheHeaders,\n      inputQueryName: \"\",\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleFormSubmit = this.handleFormSubmit.bind(this);\n    this.handleTextField = this.handleTextField.bind(this);\n    this.onCacheHeaderData = this.onCacheHeaderData.bind(this);\n    this.createOrUpdatePersistedQuery = this.createOrUpdatePersistedQuery.bind(this);\n  }\n\n  createOrUpdatePersistedQuery() {\n\n    const formatMessage = this.props.intl.formatMessage;\n    const onSave = this.props.onSave\n    let queryName;\n\n    if(this.state.isNewQuery){\n      queryName = this.state.inputQueryName;\n    } else {\n      queryName = this.state.queryName;\n    }\n\n    new PersistedQueryUtil(this.props.endpointURL)\n      .createOrUpdatePersistedQuery(\n        this.state.isNewQuery,\n        queryName,\n        this.props.query,\n        this.state.cacheHeaders,\n        formatMessage,\n        (successMsg, qname, path) => {\n          //success handler\n          success(successMsg, {\n            timeout: 5000\n          });\n          onSave(qname, path);\n        },\n        (errorMsg) => {\n          error(errorMsg, {\n            timeout: 5000\n          });\n      });\n    this.setState({\n      inputQueryName: \"\"\n    });\n  }\n\n  handleTextField(inputQueryName){\n    this.setState({\n      inputQueryName\n    });\n  }\n\n  onCacheHeaderData(data) {\n    const cacheHeaders = data;\n    this.setState({\n      cacheHeaders\n    });\n    if (this.props.query) {\n      this.createOrUpdatePersistedQuery();\n    }\n  }\n\n  handleFormSubmit(event) {\n    this.createOrUpdatePersistedQuery();\n    this.state.close();\n    event.preventDefault();\n  }\n\n  handleClick() {\n    this.createOrUpdatePersistedQuery();\n    if(this.state.isNewQuery){\n      this.state.close();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.queryName !== prevProps.queryName\n    || this.props.cacheHeaders !== prevProps.cacheHeaders) {\n      const queryName = this.props.queryName? this.props.queryName : \"\";\n      const isNewQuery = !this.props.queryName;\n      this.setState({\n        queryName,\n        isNewQuery,\n        cacheHeaders: this.props.cacheHeaders,\n      });\n    }\n  }\n\n  render() {\n    const formatMessage = this.props.intl.formatMessage;\n    const saveAs = formatMessage(intlMessages.label_save_as);\n    const save = formatMessage(intlMessages.label_save);\n    if(this.state.isNewQuery){\n      return (\n        <DialogTrigger type=\"popover\" >\n          <ActionButton isQuiet isDisabled={!this.props.query} staticColor=\"black\" aria-label={saveAs}>\n            <SaveFloppy/>\n            <Text>{saveAs}</Text>\n          </ActionButton>\n          {(close) => (\n            this.state.close = close,\n              <Dialog role=\"saveas-dialog\">\n                <Content>\n                  <Form onSubmit={this.handleFormSubmit}>\n                    <TextField\n                      label={formatMessage(intlMessages.label_query_name)}\n                      placeholder={formatMessage(intlMessages.placeholder_query_name)}\n                      value={this.state.inputQueryName}\n                      onChange={this.handleTextField}/>\n                  </Form>\n                </Content>\n                <ButtonGroup>\n                  <Button variant=\"cta\" onPress={this.handleClick}>{saveAs}</Button>\n                </ButtonGroup>\n              </Dialog>\n          )}\n        </DialogTrigger>\n      );\n    } else {\n      return (\n        <ActionButton isQuiet isDisabled={!this.props.query} onPress={this.handleClick} staticColor=\"black\" aria-label={save}>\n          <SaveFloppy/>\n          <Text>{save}</Text>\n        </ActionButton>\n      );\n    }\n  }\n}\n\nSaveComponent.propTypes = {\n  endpointURL: PropTypes.string,\n  query: PropTypes.string,\n  queryName: PropTypes.string,\n  cacheHeaders: PropTypes.string,\n  onSave:PropTypes.func,\n};\n\nexport default injectIntl(SaveComponent);\n","/**************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n ***************************************************************************/\n\nexport default () => {\n  // Locale list to map AEM languages to Aladdin / React-Intl format (BCP 47)\n  // from https://git.corp.adobe.com/raw/CIF/cif-on-skyline-frontend/dev/app/src/components/common/useLocale.js\n  const locales = {\n    en: 'en-US',\n    'en-us': 'en-US',\n    cs: 'cs-CZ',\n    'cs-cz': 'cs-CZ',\n    da: 'da-DK',\n    'da-dk': 'da-DK',\n    de: 'de-DE',\n    'de-de': 'de-DE',\n    es: 'es-ES',\n    'es-es': 'es-ES',\n    fi: 'fi-FI',\n    'fi-fi': 'fi-FI',\n    fr: 'fr-FR',\n    'fr-fr': 'fr-FR',\n    it: 'it-IT',\n    'it-it': 'it-IT',\n    ja: 'ja-JP',\n    'ja-jp': 'ja-JP',\n    ko: 'ko-KR',\n    'ko-kr': 'ko-KR',\n    nb: 'nb-NO',\n    'nb-no': 'nb-NO',\n    nl: 'nl-NL',\n    pl: 'pl-PL',\n    'pl-pl': 'pl-PL',\n    'nl-nl': 'nl-NL',\n    pt: 'pt-BR',\n    'pt-br': 'pt-BR',\n    ru: 'ru-RU',\n    'ru-ru': 'ru-RU',\n    sv: 'sv-SE',\n    'sv-se': 'sv-SE',\n    tr: 'tr-TR',\n    'tr-tr': 'tr-TR',\n    'zh-cn': 'zh-CN',\n    'zh-hans-cn': 'zh-CN',\n    'zh-hans': 'zh-CN',\n    'zh-tw': 'zh-TW',\n    'zh-hant-tw': 'zh-TW',\n    'zh-hant': 'zh-TW'\n  };\n\n  // Lookup language from html lang property. This property is set based on the user settings in AEM.\n  const docLang = document.documentElement.lang.toLowerCase();\n\n  return locales[docLang] || 'en-US';\n};\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nconst TEN_SECONDS = 10000;\n\n/**\n * Caching response for operationName 'IntrospectionQuery' for n seconds (10 seconds),\n * other operations are not cached.\n */\nexport default class CachingGraphQLClient {\n\n  constructor() {\n    this.lastUrl = null;\n  }\n\n  query(url, graphQLParams) {\n    // we may bypass cache in case of a non introspection query, or if endpoint url is changed\n    const isIntrospectionQuery = graphQLParams.operationName === \"IntrospectionQuery\";\n    const bypassCache = !isIntrospectionQuery || this.lastUrl !== url;\n    this.lastUrl = url;\n    let data;\n    if (bypassCache || !this.cachedData || Date.now() - this.cachedDataTime > TEN_SECONDS) {\n      data = this._executeQuery(graphQLParams);\n      if (isIntrospectionQuery) {\n        this.cachedData = data;\n        this.cachedDataTime = Date.now();\n      }\n    } else {\n      data = this.cachedData;\n    }\n    return data;\n  }\n\n  _executeQuery(graphQLParams) {\n    const xhr = new window.XMLHttpRequest();\n    xhr.open(\"POST\", this.lastUrl, false);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    let data;\n    xhr.onload = function () {\n      data = JSON.parse(xhr.response);\n    };\n    xhr.send(JSON.stringify(graphQLParams));\n    return data;\n  }\n\n}\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nexport async function getQueryTypeFields(endpointUrl) {\n  return new Promise((resolve, reject) => {\n    const errorPrefix = `An error has occured while reading the query type fields due to `;\n    const xhr = new XMLHttpRequest();\n    const url = window.Granite.HTTP.externalize(endpointUrl);\n    xhr.open(\"POST\", url, true);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    xhr.onload = function () {\n      if (xhr.status === 200) {\n        try {\n          const fields = JSON.parse(xhr.response).data.__schema.queryType.fields;\n          resolve(fields);\n        } catch (errParsing) {\n          const message = `${errorPrefix} : ${errParsing}`;\n          reject(message);\n        }\n      } else if (xhr.status === 404) {\n        const message = `${errorPrefix} : Not Found`;\n        reject(message);\n      } else {\n        const message = `${errorPrefix} : Error code ${xhr.status} : ${xhr.response}`;\n        reject(message);\n      }\n    }\n    xhr.send(\"{ \\\"query\\\": \\\"{ __schema { queryType { fields { name } } } }\\\" }\");\n  });\n}\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nconst CONFIG_URL = \"/libs/cq/graphql/sites/graphiql/_jcr_content/explorer/content/items/graphiqlconfig.json\";\nexport async function getConfigOptions() {\n    return new Promise((resolve, reject) => {\n      const errorPrefix = `An error has occured while reading the graphiql configuration due to `;\n      const xhr = new XMLHttpRequest();\n      const url = window.Granite.HTTP.externalize(CONFIG_URL);\n      xhr.open(\"GET\", url, true);\n      xhr.onload = function () {\n        if (xhr.status === 200) {\n          try {\n            resolve(JSON.parse(xhr.response));\n          } catch (errParsing) {\n            const message = `${errorPrefix} : ${errParsing}`;\n            reject(message);\n          }\n        } else if (xhr.status === 404) {\n          const message = `${errorPrefix} : Not Found`;\n          reject(message);\n        } else {\n          const message = `${errorPrefix} : Error code ${xhr.status} : ${xhr.response}`;\n          reject(message);\n        }\n      }\n      xhr.send();\n    });\n}\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nimport {\n  PERSIST_URL,\n  PUBLISH_URL,\n  GET_PERSISTED_QUERIES_URL,\n  CONF_PATH_PREFIX,\n  JCR_PATH_SEPARATOR,\n} from \"project.utils/constants\";\n\nconst intlMessages = {\n  publish_success: {\n    id: \"persisted.publish_success\",\n    defaultMessage: \"Selected query scheduled for publishing.\",\n    description: \"Message displayed on success\"\n  },\n  publish_error: {\n    id: \"persisted.publish_error\",\n    defaultMessage: \"Could not publish selected query.\",\n    description: \"Message displayed on error\"\n  },\n  unpublish_success: {\n    id: \"persisted.unpublish_success\",\n    defaultMessage: \"Selected query scheduled for unpublishing.\",\n    description: \"Message displayed on success\"\n  },\n  unpublish_error: {\n    id: \"persisted.unpublish_error\",\n    defaultMessage: \"Could not unpublish selected query.\",\n    description: \"Message displayed on error\"\n  },\n  create_success: {\n    id: \"persisted.create_success\",\n    defaultMessage: \"Successfully created a persisted query\",\n    description: \"Toast message displayed on success\"\n  },\n  update_success: {\n    id: \"persisted.update_success\",\n    defaultMessage: \"Successfully updated the persisted query\",\n    description: \"Toast message displayed on success\"\n  }\n};\n\nexport default class PersistedQueryUtil {\n\n  constructor(url) {\n    this.url = url;\n    this.configName = this.url ? this.url.split(\"cq:graphql/\")[1].split(\"/endpoint.json\")[0] : \"\";\n  }\n\n  async fetchPersistedQueries() {\n    return this._getPersistedQueries();\n  }\n\n  async isPersistedQueryEnabled() {\n    const availableQueries = await this.fetchPersistedQueries();\n    return availableQueries.persistedQueries !== null;\n  }\n\n  /**\n   *\n   * Return the config name from the provided url.\n   */\n  getConfigName() {\n    // url is of the form : /content/cq:graphql/config-name/endpoint.json\n    return this.configName;\n  }\n\n  /**\n   * Fetch the list of persisted queries corresponding to a particular configuration\n   * and set the state of the component with the result, so that it is re-rendered.\n   */\n  async _getPersistedQueries() {\n    const queryData = await this._fetchPersistedQueriesData(this.configName);\n    // if persisted query data was fetched\n    if (queryData) {\n      const queries = this._getQueriesFromData(queryData);\n      return {\n        persistedQueries: queries,\n        configName: this.configName,\n      };\n    } else {\n      return {\n        persistedQueries: null,\n        configName: this.configName,\n      };\n    }\n  }\n\n  /**\n   * Helper method which fetched the queries via an AJAX request and returns an array\n   * of persisted query objects.\n   */\n  async _fetchPersistedQueriesData() {\n    return new Promise((resolve, reject) => {\n      const errorPrefix = `An error has occured while fetching persisted queries for configuration \"${this.configName}\"`;\n      const xhr = new XMLHttpRequest();\n      const url = window.Granite.HTTP.externalize(GET_PERSISTED_QUERIES_URL)\n        + JCR_PATH_SEPARATOR + this.configName;\n      xhr.open(\"GET\", url, true);\n      xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n      xhr.onload = function () {\n        if (xhr.status === 200) {\n          try {\n            const parsedResponse = JSON.parse(xhr.response);\n            resolve(parsedResponse);\n          } catch (errParsing) {\n            const message = `${errorPrefix} : ${errParsing}`;\n            reject(message);\n          }\n        } else if (xhr.status === 404) {\n          resolve(null)\n        } else {\n          const message = `${errorPrefix} : ${response.status}`;\n          reject(message);\n        }\n      }\n      xhr.send();\n    });\n  }\n\n  /**\n   *\n   * @param queryData an array of JSON objects (respresenting the persisted queries)\n   *\n   * Helper method parses the given data, and creates an array of objects with the\n   * required properties.\n   */\n  _getQueriesFromData(queryData) {\n    const queryArr = [];\n    for (var i = 0; i < queryData.length; i++) {\n      for (const query of queryData[i].queries) {\n        const queryShortForm = query.path.shortForm;\n        const headers = {};\n        headers['cache-control'] = query.data['cache-control'];\n        headers['surrogate-control'] = query.data['surrogate-control'];\n        const newQuery = {\n          path: CONF_PATH_PREFIX + query.path.longForm,\n          shortForm: queryShortForm,\n          queryName: queryShortForm.substring(\n            queryShortForm.lastIndexOf(\"/\") + 1\n          ),\n          query: query.data.query,\n          lastReplicationAction: query.lastReplicationAction,\n          cacheHeaders: JSON.stringify(headers),\n        };\n        queryArr.push(newQuery);\n      }\n    }\n    return queryArr;\n  }\n\n  /**\n   *\n   * @param isNewQuery boolean to instruct to create or update, true for create.\n   * @param queryName the name of the persisted query.\n   * @param query the query object.\n   * @param headers cache headers.\n   * @param formatMessage the function to localize message\n   * @param onSave the callback on successful save.\n   * @param onError the callback on error.\n   *\n   * Helper method create or update persisted query.\n   */\n   createOrUpdatePersistedQuery(isNewQuery, queryName, query, headers, formatMessage, onSave, onError) {\n\n    let operationType,\n      successMsg;\n\n    if(isNewQuery){\n      operationType = \"PUT\";\n      successMsg = formatMessage(intlMessages.create_success);\n    } else {\n      operationType = \"POST\";\n      successMsg = formatMessage(intlMessages.update_success);\n    }\n    const cacheHeaders = headers ? headers : '{\"cache-control\":\"\", \"surrogate-control\":\"\"}';\n    const url = window.Granite.HTTP.externalize(PERSIST_URL) + '/' + this.configName + '/' + queryName;\n    const path = `/conf/${this.configName}/settings/graphql/persistentQueries/${queryName}`;\n    const jsonHeaders = JSON.parse(cacheHeaders);\n    const requestBody = JSON.stringify({ \"query\" : JSON.parse(JSON.stringify(query)),\n      \"cache-control\": jsonHeaders['cache-control'],\n      \"surrogate-control\": jsonHeaders[\"surrogate-control\"] });\n    const xhr = new XMLHttpRequest();\n\n    xhr.open(operationType, url);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n\n    function errorMessageParser(errorMsg) {\n      if(errorMsg.includes(\"type=ValidationError; \")){\n        return errorMsg.split(\"type=ValidationError; message=\")[1].split(\"@\")[0];\n      }\n      return errorMsg;\n    }\n\n    xhr.onload = function () {\n      if(xhr.status === 200 || xhr.status === 201 ){\n        onSave(successMsg, queryName, path);\n      } else {\n        //error handler\n        onError(errorMessageParser(JSON.stringify(JSON.parse(xhr.responseText).errors[0].details)));\n      }\n    };\n    xhr.send(requestBody);\n  }\n}\n\n/**\n *\n * @param command the replication command to pass.\n * @param path the path to replicate.\n * @param onPublish the callback after replication succeeded.\n * @param onError the callback after replication failed.\n *\n * Helper internal method to publish/unpublish path\n */\nconst _requestReplication = (command, path, onPublish, onError) => {\n  const formData = new FormData();\n  formData.append(\"_charset_\", \"utf-8\");\n  formData.append(\"path\", path);\n  formData.append(\"cmd\", command);\n  const xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", window.Granite.HTTP.externalize(PUBLISH_URL));\n  const text=command===\"activate\"?\"publish\":\"unpublish\";\n  xhr.onload = function () {\n    if (xhr.status === 200 || xhr.status === 201) {\n      onPublish(intlMessages[`${text}_success`]);\n    } else {\n      onError(intlMessages[`${text}_error`]);\n    }\n  };\n  xhr.send(formData);\n};\n\n/**\n * @param path the path to replicate.\n * @param onPublish the callback after replication succeeded.\n * @param onError the callback after replication failed.\n *\n * Helper method to activate a path\n */\nexport const activate = (path, onPublish, onError) => {\n  _requestReplication(\"activate\", path, onPublish, onError);\n};\n\n/**\n * @param path the path to replicate.\n * @param onPublish the callback after replication succeeded.\n * @param onError the callback after replication failed.\n *\n * Helper method to deactivate a path\n */\n export const deactivate = (path, onPublish, onError) => {\n  _requestReplication(\"deactivate\", path, onPublish, onError);\n};\n\nexport const deleteQuery = (queryShortForm, onSuccess, onError) => {\n  var url = window.Granite.HTTP.externalize(PERSIST_URL) + queryShortForm;\n  var xhr = new XMLHttpRequest();\n\n  xhr.open(\"DELETE\", url, true);\n  xhr.onload = function () {\n    if (xhr.readyState === 4 && xhr.status === 200) {\n      onSuccess();\n    } else {\n      onError();\n    }\n  };\n  xhr.send(null);\n};\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\n\n/**\n * Utility class to map cache headers of persisted queries from JSON to a map, and vice versa.\n */\n\n/*\n\n{\n    \"headerGroup0\": {\n      \"header0_0\": value,\n      \"header0_1\": value\n    },\n    \"headerGroup1\": {\n      \"header1_0\": value,\n      \"header1_1\": value\n    }\n}\n */\n\nexport default class QueryCacheHeaderMapper {\n  static jsonToArray(jsonString) {\n    // convert to JSON object\n    const jsonHeaders = JSON.parse(jsonString);\n    // map from JSON to name/value pair based array\n    return Object.entries(jsonHeaders).map(\n      g => ({\n        \"headerGroup\": g[0],\n        \"headers\": Object.entries(g[1]).map(h => ({\"name\": h[0], \"value\":h[1]}))\n      })\n    );\n  }\n\n  static arrayToJson(headersArray) {\n    // do opposite of jsonToArray() function\n    // only return selected elements\n    const cacheHeader = {};\n    for (const group of headersArray) {\n      const headers = {};\n      for (const h of group.headers) {\n        if (h.isSelected) {\n          headers[h.name] = h.value;\n        }\n      }\n      cacheHeader[group.headerGroup] = headers;\n    }\n    return (JSON.stringify(cacheHeader));\n  }\n}\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nexport class ComponentBase {\n  /**\n   * Initialises the component using @nc/dom-components logic.\n   * It sets the name, element, configuration.\n   *\n   * @param {HTMLElement} el - This is the HTML element in the DOM that instantiated the component\n   * @param {object} config - The configuration coming from the data-component-param attribute\n   */\n  constructor(el, config) {\n    this.el = el;\n    this.config = config || {};\n\n    this.init();\n  }\n\n  init() {\n    throw new Error(\n      `Missing 'init()' function for class of type BaseComponent`\n    );\n  }\n}\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nimport { getConfigOptions } from 'project.utils/GraphiQLConfigUtil.js';\nimport { error } from \"@react/react-spectrum/Toast\";\n\nexport const create = (Component, el) => {\n  getConfigOptions()\n  .then(options => {\n    new Component(el, options);\n  })\n  .catch(errMsg => {\n    error(errMsg, {\n      timeout: 5000\n    });\n  });\n};\n","/*************************************************************************\n * ADOBE CONFIDENTIAL\n * ___________________\n *\n * Copyright 2022 Adobe\n * All Rights Reserved.\n *\n * NOTICE: All information contained herein is, and remains\n * the property of Adobe and its suppliers, if any. The intellectual\n * and technical concepts contained herein are proprietary to Adobe\n * and its suppliers and are protected by all applicable intellectual\n * property laws, including trade secret and copyright laws.\n * Dissemination of this information or reproduction of this material\n * is strictly forbidden unless prior written permission is obtained\n * from Adobe.\n **************************************************************************/\nexport const GET_PERSISTED_QUERIES_URL = \"/graphql/list.json\";\nexport const EXECUTE_URL = \"/graphql/execute.json\";\nexport const PERSIST_URL = \"/graphql/persist.json\";\nexport const JCR_PATH_SEPARATOR = \"/\";\nexport const DIALOG_PATH_PREFIX = \"/mnt/override/apps/\";\nexport const DIALOG_PATH_SUFFIX = \"/_cq_dialog.html\";\nexport const SHELL_PATH_PREFIX = \"mnt/overlay\";\nexport const APPS_PATH_PREFIX = \"apps\";\nexport const CONF_PATH_PREFIX = \"/conf\";\nexport const DEFAULT_TOAST_TIMEOUT = 5000;\nexport const ACTION_COPY_URL = \"copy-url\";\nexport const ACTION_DELETE = \"delete\";\n\nexport const ACTION_CONFIGURE_CACHE_HEADERS = \"headers\";\nexport const PUBLISH_URL = \"/bin/replicate.json\";\nexport const DEFAULT_QUERY = \"# Welcome to GraphiQL\\n#\\n# GraphiQL is an in-browser tool for writing, validating, and\\n# testing GraphQL queries.\\n#\\n# Type queries into this side of the screen, and you will see intelligent\\n# typeaheads aware of the current GraphQL type schema and live syntax and\\n# validation errors highlighted within the text.\\n#\\n# GraphQL queries typically start with a \\\"{\\\" character. Lines that start\\n# with a # are ignored.\\n#\\n# An example GraphQL query might look like:\\n#\\n#     {\\n#       field(arg: \\\"value\\\") {\\n#         subField\\n#       }\\n#     }\\n#\\n# Keyboard shortcuts:\\n#\\n#  Prettify Query:  Shift-Ctrl-P (or press the prettify button above)\\n#\\n#       Run Query:  Ctrl-Enter (or press the play button above)\\n#\\n#   Auto Complete:  Ctrl-Space (or just start typing)\\n#\\n\\n\";\n\n\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"/*************************************************************************\\n * ADOBE CONFIDENTIAL\\n * ___________________\\n *\\n * Copyright 2022 Adobe\\n * All Rights Reserved.\\n *\\n * NOTICE: All information contained herein is, and remains\\n * the property of Adobe and its suppliers, if any. The intellectual\\n * and technical concepts contained herein are proprietary to Adobe\\n * and its suppliers and are protected by all applicable intellectual\\n * property laws, including trade secret and copyright laws.\\n * Dissemination of this information or reproduction of this material\\n * is strictly forbidden unless prior written permission is obtained\\n * from Adobe.\\n **************************************************************************/\\n\\n.persisted-queries-list > div > div:first-child {\\n  display: none;\\n}\\n\", \"\"]);\n\n","exports = module.exports = require(\"../../../../../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"/*************************************************************************\\n * ADOBE CONFIDENTIAL\\n * ___________________\\n *\\n * Copyright 2022 Adobe\\n * All Rights Reserved.\\n *\\n * NOTICE: All information contained herein is, and remains\\n * the property of Adobe and its suppliers, if any. The intellectual\\n * and technical concepts contained herein are proprietary to Adobe\\n * and its suppliers and are protected by all applicable intellectual\\n * property laws, including trade secret and copyright laws.\\n * Dissemination of this information or reproduction of this material\\n * is strictly forbidden unless prior written permission is obtained\\n * from Adobe.\\n **************************************************************************/\\n\\n.aem-graphiql__container\\n  .graphiql-root\\n  .graphiql__app\\n  .persisted-queries-panel {\\n  width: 200px;\\n  border-right: 2px solid #e1e1e1;\\n}\\n\\n.aem-graphiql__container\\n  .graphiql-root\\n  .graphiql__app\\n  .persisted-queries-panel\\n  .persisted-queries-list {\\n  display: flex;\\n  box-sizing: border-box;\\n  height: 100%;\\n  width: 100%;\\n  position: relative;\\n  min-height: 0;\\n  min-width: 0;\\n  flex-direction: column;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.aem-graphiql__container\\n  .graphiql-root\\n  .graphiql__app\\n  .persisted-queries-panel\\n  .persisted-queries-header {\\n  border-bottom: 1px solid #e1e1e1;\\n  float: left;\\n  width: 90%;\\n  height: 34px;\\n  padding: 7px 12px 6px;\\n  cursor: default;\\n}\\n.persisted-queries-header > div {\\n  float: left;\\n}\\n.persisted-queries-header > div > h4 {\\n  margin-top: 5px;\\n}\\n.persisted-queries-header > button {\\n  float: right;\\n}\\n#no-saved-queries {\\n  padding: 20px;\\n}\\n\", \"\"]);\n\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./PersistedQueriesList.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js!./PersistedQueriesPanel.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};"],"names":["GraphiQLApp","userLocale","localConverter","window","Granite","I18n","getLocale","reacIntlLocale","replace","ReactDOM","render","IntlProvider","messages","localeData","locale","defaultLocale","this","config","el","ComponentBase","document","addEventListener","$root","querySelector","create","intlMessages","id","defaultMessage","description","CacheConfigurationDialog","props","formatMessage","useIntl","dialogContainer","useDialogContainer","defaultHeaderValues","headerGroup","headers","name","value","isSelected","info","useState","cacheHeaderState","setCacheHeaderState","JSON","parse","stringify","propsCacheHeaderState","setPropsCacheHeaderState","useEffect","cacheHeaders","length","QueryCacheHeaderMapper","jsonToArray","e","console","log","header","headerInState","findHeader","deepCloneData","data","updateHeaders","headerName","group","find","grp","hdr","label_save","label_cancel","Dialog","size","role","Heading","Divider","Content","TableView","TableHeader","Column","isRowHeader","width","TableBody","map","Row","Cell","Checkbox","onChange","onChangeCacheConfig","Text","ContextualHelp","variant","NumberField","defaultValue","minValue","step","onChangeCacheValue","ButtonGroup","Button","onPress","dismiss","onData","arrayToJson","autoFocus","propTypes","PropTypes","string","func","copyUrlToClipboard","queryShortForm","queryBody","variables","extractVariablesFromQuery","url","createCopyUrl","navigator","clipboard","writeText","displaySuccessToast","displayErrorToast","substring","indexOf","split","forEach","param","origin","location","protocol","hostname","port","HTTP","externalize","EXECUTE_URL","successMsg","SuccessToast","timeout","DEFAULT_TOAST_TIMEOUT","errorMsg","ErrorToast","DeleteQueryDialog","queryName","onDelete","AlertDialog","title","primaryActionLabel","secondaryActionLabel","onPrimaryAction","deleteQuery","onSecondaryAction","View","level","PersistedQueriesList","queryList","endpointUrl","onQuerySelection","onSave","selectionMode","selectionStyle","height","overflowMode","selectedKeys","Array","of","onSelectionChange","key","filter","queryObj","currentKey","hideHeader","align","items","query","lastReplicationAction","PersistedQueryMenu","array","PersistedQueriesPanel","state","configName","persistedQueries","onCreate","element","React","createRef","prevProps","reloadFlag","PersistedQueryUtil","fetchPersistedQueries","setState","intl","content","IllustratedMessage","ProgressCircle","isIndeterminate","marginTop","enableAdd","className","ref","ActionButton","isQuiet","Flex","direction","gap","alignItems","Component","bool","injectIntl","dialog","setDialog","menuItems","action","ACTION_COPY_URL","ACTION_DELETE","ACTION_CONFIGURE_CACHE_HEADERS","MenuTrigger","Menu","onAction","qry","shortForm","menuItem","Item","textValue","DialogContainer","onDismiss","createOrUpdatePersistedQuery","path","success","error","object","AppComponent","DEFAULT_QUERY","hasModels","isPersistedQueriesUIEnabled","handleQuerySelection","bind","handleSave","handleUrlChange","handleDelete","handleReset","handleReload","_","prevState","event","detail","thisObj","isPersistedQueryEnabled","then","isEnabled","configAllowPersistedQuery","getQueryTypeFields","fields","initConfigAllowPersistedQuery","removeEventListener","hasEndpoints","Object","keys","endpoints","createURL","toastPlacement","Provider","theme","lightTheme","colorScheme","onPublish","link","str","href","defaultProps","GraphiQLComponent","queryString","mounted","cachingGraphQLClient","CachingGraphQLClient","GraphiQL","Logo","_graphiql","onEditQuery","handleEditQuery","undefined","style","defaultVariableEditorOpen","fetcher","graphQLParams","Toolbar","background","prettify","staticColor","historyContext","toggle","endpointURL","PublishComponent","publishQuery","unpublishQuery","activate","deactivate","close","canUnpublish","publish","unpublish","yes","no","DialogTrigger","SaveComponent","isNewQuery","inputQueryName","handleClick","handleFormSubmit","handleTextField","onCacheHeaderData","qname","preventDefault","saveAs","save","type","isDisabled","Form","onSubmit","TextField","label","placeholder","en","cs","da","de","es","fi","fr","it","ja","ko","nb","nl","pl","pt","ru","sv","tr","documentElement","lang","toLowerCase","lastUrl","isIntrospectionQuery","operationName","bypassCache","cachedData","Date","now","cachedDataTime","_executeQuery","xhr","XMLHttpRequest","open","setRequestHeader","onload","response","send","Promise","resolve","reject","errorPrefix","status","__schema","queryType","errParsing","message","CONFIG_URL","publish_success","publish_error","unpublish_success","unpublish_error","create_success","update_success","_getPersistedQueries","availableQueries","_fetchPersistedQueriesData","queryData","queries","_getQueriesFromData","GET_PERSISTED_QUERIES_URL","JCR_PATH_SEPARATOR","parsedResponse","queryArr","i","newQuery","CONF_PATH_PREFIX","longForm","lastIndexOf","push","onError","operationType","PERSIST_URL","jsonHeaders","requestBody","responseText","errors","details","includes","_requestReplication","command","formData","FormData","append","PUBLISH_URL","text","onSuccess","readyState","jsonString","entries","g","h","headersArray","cacheHeader","init","Error","getConfigOptions","options","catch","errMsg","module","exports"],"sourceRoot":""}